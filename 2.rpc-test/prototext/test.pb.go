// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package prototext

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestRequest struct {
	// 姓名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 身高
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 体重
	Weight []int32 `protobuf:"varint,3,rep,packed,name=weight,proto3" json:"weight,omitempty"`
	// 人生格言
	Moto                 string   `protobuf:"bytes,4,opt,name=moto,proto3" json:"moto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRequest) Reset()         { *m = TestRequest{} }
func (m *TestRequest) String() string { return proto.CompactTextString(m) }
func (*TestRequest) ProtoMessage()    {}
func (*TestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *TestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest.Unmarshal(m, b)
}
func (m *TestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest.Marshal(b, m, deterministic)
}
func (m *TestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest.Merge(m, src)
}
func (m *TestRequest) XXX_Size() int {
	return xxx_messageInfo_TestRequest.Size(m)
}
func (m *TestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest proto.InternalMessageInfo

func (m *TestRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestRequest) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TestRequest) GetWeight() []int32 {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *TestRequest) GetMoto() string {
	if m != nil {
		return m.Moto
	}
	return ""
}

type TestReponse struct {
	// 错误号
	Error int32 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	// 错误信息
	Ermessage            string   `protobuf:"bytes,2,opt,name=ermessage,proto3" json:"ermessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestReponse) Reset()         { *m = TestReponse{} }
func (m *TestReponse) String() string { return proto.CompactTextString(m) }
func (*TestReponse) ProtoMessage()    {}
func (*TestReponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *TestReponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReponse.Unmarshal(m, b)
}
func (m *TestReponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReponse.Marshal(b, m, deterministic)
}
func (m *TestReponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReponse.Merge(m, src)
}
func (m *TestReponse) XXX_Size() int {
	return xxx_messageInfo_TestReponse.Size(m)
}
func (m *TestReponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestReponse proto.InternalMessageInfo

func (m *TestReponse) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *TestReponse) GetErmessage() string {
	if m != nil {
		return m.Ermessage
	}
	return ""
}

func init() {
	proto.RegisterType((*TestRequest)(nil), "prototext.TestRequest")
	proto.RegisterType((*TestReponse)(nil), "prototext.TestReponse")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8e, 0x3d, 0xae, 0xc2, 0x40,
	0x0c, 0x84, 0x95, 0x97, 0x1f, 0x69, 0xfd, 0x3a, 0x0b, 0xa1, 0x14, 0x14, 0x51, 0xaa, 0x54, 0x34,
	0x9c, 0x80, 0x2b, 0xac, 0xb8, 0x40, 0x90, 0x46, 0x09, 0x45, 0xe2, 0xb0, 0x36, 0x82, 0xe3, 0xa3,
	0xdd, 0x05, 0x51, 0x79, 0xe6, 0x2b, 0xe6, 0x33, 0x91, 0x41, 0xed, 0xb8, 0x05, 0x31, 0x61, 0x97,
	0x8e, 0xe1, 0x65, 0x3d, 0xe8, 0xff, 0x02, 0x35, 0x8f, 0xfb, 0x03, 0x6a, 0xcc, 0x54, 0xad, 0xe3,
	0x82, 0xb6, 0xe8, 0x8a, 0xc1, 0xf9, 0x94, 0x79, 0x4f, 0xcd, 0x8c, 0xdb, 0x34, 0x5b, 0xfb, 0xd7,
	0x15, 0x43, 0xed, 0x3f, 0x2d, 0xf2, 0x67, 0xe6, 0x65, 0x57, 0x46, 0x9e, 0x5b, 0xdc, 0x58, 0xc4,
	0xa4, 0xad, 0xf2, 0x46, 0xcc, 0xfd, 0xf9, 0xab, 0xd9, 0x64, 0x55, 0xf0, 0x8e, 0x6a, 0x84, 0x20,
	0x21, 0x79, 0x6a, 0x9f, 0x0b, 0x1f, 0xc8, 0x21, 0x2c, 0x50, 0x1d, 0x27, 0x24, 0x97, 0xf3, 0x3f,
	0x70, 0x6d, 0xd2, 0xd3, 0xa7, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x22, 0x9b, 0xf8, 0x61, 0xc9,
	0x00, 0x00, 0x00,
}
